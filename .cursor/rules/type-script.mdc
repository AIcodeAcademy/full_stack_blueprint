---
description: Rules for writing TypeScript code
globs: *.ts
---
# Project structure

## Folders
```txt
dist/
docs/ 
src/
tests/
```
- Read the [OVERVIEW.md](mdc:docs/OVERVIEW.md) ad the docs folder to have an outline of the folder structure
- Inside the client and server folders prefer organization by feature than technology

## File naming

- Export only one artifact per file
- Use the following naming convention `{{business}}.{{technical}}.ts`, where :
  - business is related to functional or specification domain
  - technical is one of: `type` | `component` | `util` ...
  - Examples: `login.component.ts`, `users.repository.ts`, `credentials.type.ts`

# Type Script rules

- Name boolean flag variables with a verb like `is`, `has`, `can`...
- Name functions with a verb
- Prefer functions over classes
- Prefer `#` over `_` for private members
- Prefer `type` over `interface`
- Avoid `null` and `undefined` , define a `NULL_VALUE` as a const for our types
- Avoid long functions
- Avoid deep nested anonymous functions by assigning named functions
- Avoid deep nested control structures by using early returns and extract method patterns
- Validate data using plain TS functions no ValueObjects needed
- Avoid external libraries
- Make use or create utilities at shared folder. Example: `fetch.utils.ts`