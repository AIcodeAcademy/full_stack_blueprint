---
description: How to create a reource for the API
globs: src/server/api
---
# Resource rules

- In a RESTfull server, a resource represents an entity accesesd by a route API
- In this context, a resource is a set of artifacts that manages what it is received and responded when a route is called
- For each route create a folder under the `src/server/api/resource-name` with the same 
- For each route, create two artifacts in the resource folder:
  - the controller
  - the repository

## Resource controller

- A controller will be a module of endpoints configured at [api.controller.ts](mdc:src/server/api/api.controller.ts)
- Each endpoint is a function with signature `async (request: Request): Promise<Response> `
- The file name will be `reource-name.controller.ts`
- Each endpoint obtains input data from the request, calls the repository, and returns a response
- Must use [request.utils.ts](mdc:src/server/shared/request.utils.ts) and [response.utils.ts](mdc:src/server/shared/response.utils.ts) to do so.
- Must use its repository to interact with the database
- Follow [type-script.mdc](mdc:.cursor/rules/type-script.mdc) rules to write the controller code

### Resource repository

- A repository is a module of exported functions that helps a controller to fetch data from the database
- The file name will be `resource-name.repository.ts`
- Must use the sql utils from [sql.utils.ts](mdc:src/server/shared/sql.utils.ts) to interact with the database
- Follow [type-script.mdc](mdc:.cursor/rules/type-script.mdc) rules to write the repository code
