---
description: How to create a page componente
globs: src/client/app
---
# Page rules

- In a Sigle Page Application, routing is managed at client side.
- In this context, a page is a set of artifacts that manages what it is displayed when a route is activated
- For each route or page create a folder under the `src/client/app/page-name` with the same 
- For each page, create three artifacts in the page folder:
  - the page web component 
  - the presenter web component
  - the repository

## Page component

- A page will be a WebComponent loaded by the [navigation.utils.ts](mdc:src/client/shared/navigation.utils.ts) in the `router-outlet` of the [app.component.ts](mdc:src/client/app.component.ts)
- The file name will be `page-name.page.ts`
- A page should use a repository to fetch and save data 
- A page should use one or more presenter components to display data
- Follow [web.mdc](mdc:.cursor/rules/web.mdc) rules to write the page code

### Page repository

- A repository is a module of exported functions that helps a page to fetch data from the server
- The file name will be `page-name.repository.ts`
- Must use the fetch API to fetch utils from [fetch.utils.ts](mdc:src/client/shared/fetch.utils.ts)

### Presenter components

- This components are just for this page and are not shared
- Encapsulates complex html and ui logic to keep the page slim
- A component should be named with `name.component.ts` extension
- Follow [web.mdc](mdc:.cursor/rules/web.mdc) rules to write the domponent code